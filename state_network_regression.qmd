---
title: "state network regression"
format: html
editor: visual
---

## State Network Regression

```{r}
library(tidyverse)
library(igraph)

bill_edge_list <- read_csv("data/edge-list.csv")
tweets_df <- read_csv("data/full-labelled-tweets.csv")
states_edge_list <- read_csv("raw-data/state-traits-edgelist.csv")
```

Wrangle data
```{r}
#summarize tweets by governor
governor_tweets_df <- tweets_df %>% 
  select(name, state, 
         pro_blm_ratio, topic_blm_ratio) %>% 
  distinct()

#5 states out of 50 not represented in twitter data
missing_states <- c("AR", "MS", "NV", "NY", "WV")

#select variables from state df
states_edge_list <- states_edge_list %>% 
  select(state_01, state_02, contig, mrp_ideology_01, mrp_ideology_02)

#select variables from state bills 
bill_edge_list <- bill_edge_list %>% 
  select(state, "state-j", score) %>% 
  filter(!(state %in% missing_states)) %>% 
  filter(!('state-j' %in% missing_states))
  
```

Merge into full edge list
```{r}
#merge gov tweets with state i 
merged_edge_list <- bill_edge_list %>% 
  left_join(governor_tweets_df, by = "state")  

#merge tweets with state j
merged_edge_list <- merged_edge_list %>% 
  left_join(governor_tweets_df, by = c("state-j" = "state"))
  
#merge with state traits
full_edge_list <- merged_edge_list %>% 
  left_join(states_edge_list, by = c("state" = "state_01", "state-j" = "state_02"))

states <- full_edge_list %>% 
  select(state) %>% 
  distinct() 

```

Create igraph network
```{r}
igraph <- graph.data.frame(full_edge_list, directed = FALSE, vertices = states)

plot(igraph, vertex.label = V(igraph)$state)

#DV
similarity <- as_adjacency_matrix(igraph, attr="score")

#IVs

```

Run regression
```{r}
nl<-netlm(Padgett_Business,           # Dependent variable/network
          list(Padgett_Marriage, Padgett_Party), # List the independent variables/networks
          reps=1000) 
```


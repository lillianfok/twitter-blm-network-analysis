---
title: "state network regression"
format: pdf
editor: visual
---

## State Network Regression

```{r}
library(tidyverse)
library(igraph)
library(here)
library(janitor)
library(rio)

bill_edge_list <- read_csv(here("data/edge-list.csv"))
tweets_df <- read_csv(here("data/full-labelled-tweets.csv"))
states_edge_list <- read_csv(here("raw-data/state-traits-edgelist.csv"))
```

Wrangle data
```{r}
#twitter data
governor_tweets_df <- tweets_df %>% 
  select(name, state, 
         pro_blm_ratio, topic_blm_ratio) %>% 
  distinct() 

#6 states out of 50 not represented in twitter data and bill data
missing_states <- c("AR", "MS", "NV", "NY", "WV", "DC")

#state edge list data
states_edge_list <- states_edge_list %>% 
  select(state_01, state_02, contig, dif_mrp_ideology, dif_urban_index, 
         dif_White, dif_Black, 
         dif_med_inc,
         dif_population)

#bill adoption edge list data
bill_score_list <- bill_edge_list %>% 
  mutate(`bill-score` = `create-centralized` +
           decertification +
           `req-report-state` +
           `req-report-fed` +
           `req-database` +
           `duty-intervene` +
           `duty-report` +
           `duty-aid` +
           `ban-chokeholds` +
           `restrict-chokeholds` +
           `fatal-force-policy` +
           `req-report-state-force` +
           `req-report-fed-force`) %>% 
  mutate(`bill-score-j` = `create-centralized-j` +
           `decertification-j` +
           `req-report-state-j` +
           `req-report-fed-j` +
           `req-database-j` +
           `duty-intervene-j` +
           `duty-report-j` +
           `duty-aid-j` +
           `ban-chokeholds-j` +
           `restrict-chokeholds-j` +
           `fatal-force-policy-j` +
           `req-report-state-force-j` +
           `req-report-fed-force-j`) %>% 
  rename(shared_score = score) %>% 
  select(state, "state-j", `bill-score`, `bill-score-j`, shared_score) %>% 
  filter(`bill-score-j` > 0) %>% 
  filter(`bill-score` > 0) 

  
```

Merge into full edge list
```{r}
#merge gov tweets with state i 
merged_edge_list <- bill_score_list %>% 
  left_join(governor_tweets_df, by = "state")

#merge tweets with state j
merged_edge_list <- merged_edge_list %>% 
  left_join(governor_tweets_df, by = c("state-j" = "state"))
  
#merge with state traits
full_edge_list <- merged_edge_list %>% 
  left_join(states_edge_list, by = c("state" = "state_01", "state-j" = "state_02")) %>% 
  clean_names() %>% 
  filter(!is.na(name_y)) %>% 
  filter(!is.na(name_x)) %>% 
  mutate(dif_topic_ratio = abs(topic_blm_ratio_x - topic_blm_ratio_y)) |>
  mutate(dif_pro_ratio = abs(pro_blm_ratio_x - pro_blm_ratio_y)) %>% 
  filter(!(state %in% missing_states)) %>% 
  filter(!(state_j %in% missing_states))

#write.csv(full_edge_list, "data/full-edge-list.csv")

states <- full_edge_list %>% 
  select(state) %>% 
  distinct() 

```


Create igraph network
```{r}
igraph <- graph.data.frame(full_edge_list, directed = FALSE, vertices = states)

par(mar=c(0,0,0,0))
plot(igraph)
#plot(igraph, vertex.label = V(igraph)$state)

#DV
similarity <- as_adjacency_matrix(igraph, attr="shared_score")
similarity <- as.matrix(similarity)

#IVs
topic_tweets <- as.matrix(as_adjacency_matrix(igraph, attr="dif_topic_ratio"))
pro_tweets <- as.matrix(as_adjacency_matrix(igraph, attr="dif_pro_ratio"))
contiguity <- as_adjacency_matrix(igraph, attr="contig")
contiguity <- as.matrix(contiguity)
ideology <- as_adjacency_matrix(igraph, attr="dif_mrp_ideology")
ideology <- as.matrix(ideology)
white <- as_adjacency_matrix(igraph, attr="dif_white")
white <- as.matrix(white)
black <- as_adjacency_matrix(igraph, attr="dif_black")
black <- as.matrix(black)
urban <- as.matrix(as_adjacency_matrix(igraph, attr = "dif_urban_index"))
income <- as.matrix(as_adjacency_matrix(igraph, attr = "dif_med_inc"))
#other IVs

#gov_gender <- import(here("data/gov_gender_mat.Rds"))
#gov_age <- import(here("data/gov_age_mat.Rds"))
#gov_party <- import(here("data/gov_party_mat.Rds"))

topic_matrices <- array(NA, c(7, length(contiguity[1,]),length(contiguity[1,]))) 


topic_matrices[1,,] <- contiguity
topic_matrices[2,,] <- ideology
topic_matrices[3,,] <- white
topic_matrices[4,,] <- black
topic_matrices[5,,] <- topic_tweets
topic_matrices[6,,] <- urban
topic_matrices[7,,] <- income
# state_matrices[8,,] <- gov_gender
# state_matrices[9,,] <- gov_age
# state_matrices[10,,] <- gov_party

pro_matrices <- array(NA, c(7, length(contiguity[1,]),length(contiguity[1,]))) 


pro_matrices[1,,] <- contiguity
pro_matrices[2,,] <- ideology
pro_matrices[3,,] <- white
pro_matrices[4,,] <- black
pro_matrices[5,,] <- pro_tweets
pro_matrices[6,,] <- urban
pro_matrices[7,,] <- income

```

Run regression

```{r}
#library(statnet)
#detach(package:igraph,unload=TRUE)

#first run network regression on topic ratio difference
state_sim_lm <- sna::netlm(similarity, topic_matrices, reps=1000)

state_model <- list()
state_model <- summary(state_sim_lm)

state_model$names <- c("Intercept", "Contiguity", "Ideology", "White", "Black", "BLM related tweets", "Urban", "Income")


state_model$coefficients = round(state_model$coefficients, 2)
state_model

#second regression on pro blm ratio difference
state_sim_lm <- sna::netlm(similarity, pro_matrices, reps=1000)

state_model <- list()
state_model <- summary(state_sim_lm)

state_model$names <- c("Intercept", "Contiguity", "Ideology", "White", "Black", "Pro BLM tweets", "Urban", "Income")
state_model$coefficients = round(state_model$coefficients, 2)
state_model

#nl<- sna::netlm(similarity,           # Dependent variable/network
#         list(contiguity, ideology, white, black, urban, income), # List the independent variables/networks
#          reps=1000) 
```




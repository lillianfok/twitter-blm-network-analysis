---
title: "cosponsorship network"
format: html
editor: visual
---

## SDS 338 Final Project

```{r}
library(incidentally)
library(tidyverse)
library(tibble)
library(janitor)

library(rio)
library(statnet)

tweets <- read_csv("senator_twitter_May-Oct.csv")
sen <- incidence.from.congress(session = 117, types = c("s"), areas = c("All"), format = "data", narrative = TRUE)
```

```{r}
mat <- as.data.frame(sen$matrix[1:101, 1:5357])

s597_df <- mat %>% 
  select(S597) %>% 
  clean_names()

s597_df <- s597_df %>% 
  rownames_to_column("senator") 

s597_df <- s597_df %>% 
  mutate(senator_j = senator) %>% 
  mutate(s597_j = s597) 

#create all combinations of senators
s597_combos <- s597_df %>% 
  expand(senator, senator_j) %>% 
  filter(senator != senator_j)

#first set of senators
 df1 <- s597_df |>
   select(senator, s597)

#second set of senators
 df2 <- s597_df |>
   select(senator_j, s597_j)

 ### Merge data
 joined_data <- left_join(s597_combos, df1, by = "senator")
  joined_data <- left_join(joined_data, df2, by = "senator_j")

  #only keep same votes
s597_edge_list <- joined_data |>
  filter(s597_j==s597)
```


We have an edgelist, but the problem is that it doesn't include isolates. So, we first need to create an empty dataset of all 100 senators, then we can bring in our ties data.

```{r, message=F, warning=F}
library(network)
```

We need to tell R how many nodes to include

```{r}
## While we "think" we know there are 100 senators, it's pretty common to have 102-105 senators in a term due to resignations, etc. We can automate the size of the network by using the nrow command. 
# We now have an empty network
nv <- nrow(s597_df)
net_senate <-network.initialize(nv)

plot(net_senate)
```

## Name vertices

```{r}
network.vertex.names(x=net_senate) <- s597_df$senator
```

```{r}
senate_el <- s597_edge_list |>
  select(senator, senator_j)
net_senate[as.matrix(senate_el)] <- 1

#are there isolates here?
```

```{r}
plot(net_senate)

#should non cosponsors be isolates?

#cosponsorship network with weighted ties 

#edge covariate percentage difference, testing homophily
#node: percent, likelihood of cosponsorship 
```


Independent Variables
```{r}
#numerical ideology score

#ratio/frequency of tweets

#senator demographics 

  set.vertex.attribute(x=net_senate,attrname="party_id",val=df$party) 


```

#Filter for only senators
```{r}
#senator list
names<- df1 %>% 
  separate(senator, c('title', 'last name', 'first name')) %>% 
  unite(name, c('first name', 'last name'), sep = " ")

senator_tweets <- tweets %>% 
  filter(name == "Elizabeth Warren")
```


